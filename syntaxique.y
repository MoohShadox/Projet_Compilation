%{
#include<stdio.h>
extern FILE* yyin;
%}

%union
{char* chaine;
int entier;
}

%token DEC FIN INST IDF VIRG PV UFLOATCH UINTCH DEFINE UINT UFLOAT

%%
S :IDF DEC BD INST BI FIN {printf("Programme correcte \n");}
;
BD :DECL PV BD 
	|DECL PV
;
EIDF :IDF VIRG EIDF 
	|IDF
;
TYPE :UINTCH | UFLOATCH
;
DECL :TYPE EIDF 
	|DEFINE UINTCH IDF = UINT 
	|DEFINE UFLOATCH IDF = UFLOAT
;
PRODUIT :ADDITION MULT ADDITION 
		|ADDITION DIV
		|ADDITION
;
ADDITION :VAL MOINS VAL
		|VAL ADD VAL
		|VAL
;
VAL :NBR 
	|MOINS NBR
;
NBR :UINT
	|UFLOAT
;
EXPP1 : NOT EXPP2
;
EXPP2 : EXPP2 AND EXPP2
		| EXPP3
;
EXPP3 : EXPP3 OR EXPP3
		| BOOLVAL
;		
BOOLVAL : COMPARAISON 
		| FAUX
		| VRAI
;
COMPARAISON : EXPR SUP EXPR 
		| EXPR INF EXPR
		| EXPR INFE EXPR
		| EXPR SUPE EXPR
		| EXPR DEGALE EXPR
		| EXPR DIFF EXPR
;
EXPR : IDF 
	| UINT
	| UFLOAT
	| PRODUIT
;
BI : BI ; INSTR
	| INSTR
;
INSTR : AFFECTATION 
	| BOUCLE
	| CONDITION
;
AFFECTATION : IDF EGALE PRODUIT
CONDITION : IF EXPP1 THAN BI ELSE BI ENDIF
BOUCLE : FOR PO AFFECTATION PV PO CONDITION PF PV AFFECTATION PF BI ENDFOR
;
%%
int yyerror(char* msg){
printf("%s",msg);
return 1;
}
int main(){
yyin = fopen("code.txt","r");
yyparse();
return 0;
}
